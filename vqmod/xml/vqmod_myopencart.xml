<?xml version="1.0" encoding="UTF-8"?>
<modification>
  <id>VQMOD CORE FOR My OPENCART</id>
  <version>1.4.x and above</version>
  <vqmver required="true">2.6.1</vqmver>
  <author>sky-faith.com</author>

  <!--自定义一些内容-->
  <file name="catalog/language/zh-cn/extension/shipping/item.php" error="skip">
    <operation error="skip" info="change the translations">
      <search position="replace">按件运费</search>
      <add>一件代发(实报实收)</add>
    </operation>
  </file>
  <file name="catalog/language/zh-cn/extension/shipping/free.php" error="skip">
    <operation error="skip" info="change the translations">
      <search position="replace">免费配送</search>
      <add>物流发货(配送至指定地点)</add>
    </operation>
  </file>
  <file name="catalog/language/en-gb/extension/shipping/item.php" error="skip">
    <operation error="skip" info="change the translations">
      <search position="replace">Per Item</search>
      <add>Instead of shipping(Real report paid-in)</add>
    </operation>
    <operation error="skip" info="change the translations">
      <search position="replace">Per Item Shipping Rate</search>
      <add>Per Item Shipping Rate(Instead of shipping)</add>
    </operation>
  </file>
  <file name="catalog/language/en-gb/extension/shipping/free.php" error="skip">
    <operation error="skip" info="change the translations">
      <search position="replace">Free Shipping</search>
      <add>All shipments(Delivery to the specified address)</add>
    </operation>
  </file>
  <file name="admin/language/en-gb/extension/shipping/free.php" error="skip">
    <operation error="skip" info="change the translations">
      <search position="replace">Free Shipping</search>
      <add>All shipments(Delivery to the specified address)</add>
    </operation>
  </file>
  <file name="admin/language/en-gb/extension/shipping/item.php" error="skip">
    <operation error="skip" info="change the translations">
      <search position="replace">Per Item</search>
      <add>Instead of shipping(Real report paid-in)</add>
    </operation>
  </file>
  <file name="admin/language/zh-cn/extension/shipping/free.php" error="skip">
    <operation error="skip" info="change the translations">
      <search position="replace">Free Shipping</search>
      <add>All shipments(Delivery to the specified address)</add>
    </operation>
  </file>
  <file name="admin/language/zh-cn/extension/shipping/free.php" error="skip">
    <operation error="skip" info="change the translations">
      <search position="replace">免费配送</search>
      <add>物流发货(配送至指定地点)</add>
    </operation>
  </file>
  <file name="admin/language/zh-cn/extension/shipping/item.php" error="skip">
    <operation error="skip" info="change the translations">
      <search position="replace">按件计费</search>
      <add>一件代发(实报实收)</add>
    </operation>
  </file>
  <file name="catalog/controller/startup/session.php" error="skip">
    <operation error="skip" info="change session logic">
      <search position="after">
        <![CDATA[$this->db->query("DELETE FROM `" . DB_PREFIX . "api_session` WHERE TIMESTAMPADD(HOUR, 1, date_modified) < NOW()");]]>
      </search>
      <add>
        <![CDATA[if (!isset($this->request->get['api_token'])) return;]]>
      </add>
    </operation>
  </file>
  <file name="catalog/controller/api/order.php" error="skip">
    <operation error="skip" info="change order logic">
      <search position="before">
        <![CDATA[public function history() {]]>
      </search>
      <add>
        <![CDATA[
        public function orderList() {
		        $this->load->language('api/order');

		        $json = array();

		        if (!isset($this->session->data['api_id'])) {
			        $json['error'] = $this->language->get('error_permission');
		        } else {
			        $this->load->model('checkout/order');

			        if (isset($this->request->get['order_id'])) {
				        $order_id = $this->request->get['order_id'];
			        } else {
				        $order_id = 0;
			        }

			        $order_info = $this->model_checkout_order->getOrders($order_id);

			        if ($order_info) {
				        $json['orders'] = $order_info;

				        $json['success'] = $this->language->get('text_success');
			        } else {
				        $json['error'] = $this->language->get('error_not_found');
			        }
		        }

		        $this->response->addHeader('Content-Type: application/json');
		        $this->response->setOutput(json_encode($json));
	        }
        ]]>
      </add>
    </operation>
  </file>
  <file name="catalog/model/checkout/order.php" error="skip">
    <operation error="skip" info="change order logic">
      <search position="before">
        <![CDATA[public function getOrderProducts($order_id) {]]>
      </search>
      <add>
        <![CDATA[
        public function getOrders($order_id) {
		        $order_query = $this->db->query("SELECT *, (SELECT os.name FROM `" . DB_PREFIX . "order_status` os WHERE os.order_status_id = o.order_status_id AND os.language_id = o.language_id) AS order_status FROM `" . DB_PREFIX . "order` o WHERE o.order_id > '" . (int)$order_id . "' and o.order_status_id>0");
            if (!$order_query->num_rows) return false;
            $orders = array();
		        for ($i=0; $i<$order_query->num_rows; $i++) {
			        $country_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "country` WHERE country_id = '" . (int)$order_query->rows[$i]['payment_country_id'] . "'");

			        if ($country_query->num_rows) {
				        $payment_iso_code_2 = $country_query->row['iso_code_2'];
				        $payment_iso_code_3 = $country_query->row['iso_code_3'];
			        } else {
				        $payment_iso_code_2 = '';
				        $payment_iso_code_3 = '';
			        }

			        $zone_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "zone` WHERE zone_id = '" . (int)$order_query->rows[$i]['payment_zone_id'] . "'");

			        if ($zone_query->num_rows) {
				        $payment_zone_code = $zone_query->row['code'];
			        } else {
				        $payment_zone_code = '';
			        }

			        $country_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "country` WHERE country_id = '" . (int)$order_query->rows[$i]['shipping_country_id'] . "'");

			        if ($country_query->num_rows) {
				        $shipping_iso_code_2 = $country_query->row['iso_code_2'];
				        $shipping_iso_code_3 = $country_query->row['iso_code_3'];
			        } else {
				        $shipping_iso_code_2 = '';
				        $shipping_iso_code_3 = '';
			        }

			        $zone_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "zone` WHERE zone_id = '" . (int)$order_query->rows[$i]['shipping_zone_id'] . "'");

			        if ($zone_query->num_rows) {
				        $shipping_zone_code = $zone_query->row['code'];
			        } else {
				        $shipping_zone_code = '';
			        }

			        $this->load->model('localisation/language');

			        $language_info = $this->model_localisation_language->getLanguage($order_query->rows[$i]['language_id']);

			        if ($language_info) {
				        $language_code = $language_info['code'];
			        } else {
				        $language_code = $this->config->get('config_language');
			        }

			        $orders[$i] = array(
				        'order_id'                => $order_query->rows[$i]['order_id'],
				        'invoice_no'              => $order_query->rows[$i]['invoice_no'],
				        'invoice_prefix'          => $order_query->rows[$i]['invoice_prefix'],
				        'store_id'                => $order_query->rows[$i]['store_id'],
				        'store_name'              => $order_query->rows[$i]['store_name'],
				        'store_url'               => $order_query->rows[$i]['store_url'],
				        'customer_id'             => $order_query->rows[$i]['customer_id'],
				        'fullname'               => $order_query->rows[$i]['fullname'],
				        'email'                   => $order_query->rows[$i]['email'],
				        'telephone'               => $order_query->rows[$i]['telephone'],
				        'custom_field'            => json_decode($order_query->rows[$i]['custom_field'], true),
				        'payment_fullname'       => $order_query->rows[$i]['payment_fullname'],
                        'payment_telephone'       => $order_query->rows[$i]['payment_telephone'],
				        'payment_company'         => $order_query->rows[$i]['payment_company'],
				        'payment_address_1'       => $order_query->rows[$i]['payment_address_1'],
				        'payment_address_2'       => $order_query->rows[$i]['payment_address_2'],
				        'payment_postcode'        => $order_query->rows[$i]['payment_postcode'],
				        'payment_city'            => $order_query->rows[$i]['payment_city'],
                        'payment_city_id'         => $order_query->rows[$i]['payment_city_id'],
				        'payment_zone_id'         => $order_query->rows[$i]['payment_zone_id'],
				        'payment_zone'            => $order_query->rows[$i]['payment_zone'],
				        'payment_zone_code'       => $payment_zone_code,
				        'payment_country_id'      => $order_query->rows[$i]['payment_country_id'],
				        'payment_country'         => $order_query->rows[$i]['payment_country'],
                        'payment_county_id'      => $order_query->rows[$i]['payment_county_id'],
                        'payment_county'         => $order_query->rows[$i]['payment_county'],
				        'payment_iso_code_2'      => $payment_iso_code_2,
				        'payment_iso_code_3'      => $payment_iso_code_3,
				        'payment_address_format'  => $order_query->rows[$i]['payment_address_format'],
				        'payment_custom_field'    => json_decode($order_query->rows[$i]['payment_custom_field'], true),
				        'payment_method'          => $order_query->rows[$i]['payment_method'],
				        'payment_code'            => $order_query->rows[$i]['payment_code'],
				        'shipping_fullname'      => $order_query->rows[$i]['shipping_fullname'],
                        'shipping_telephone'      => $order_query->rows[$i]['shipping_telephone'],
				        'shipping_company'        => $order_query->rows[$i]['shipping_company'],
				        'shipping_address_1'      => $order_query->rows[$i]['shipping_address_1'],
				        'shipping_address_2'      => $order_query->rows[$i]['shipping_address_2'],
				        'shipping_postcode'       => $order_query->rows[$i]['shipping_postcode'],
				        'shipping_city'           => $order_query->rows[$i]['shipping_city'],
                        'shipping_city_id'        => $order_query->rows[$i]['shipping_city_id'],
				        'shipping_zone_id'        => $order_query->rows[$i]['shipping_zone_id'],
				        'shipping_zone'           => $order_query->rows[$i]['shipping_zone'],
				        'shipping_zone_code'      => $shipping_zone_code,
				        'shipping_country_id'     => $order_query->rows[$i]['shipping_country_id'],
				        'shipping_country'        => $order_query->rows[$i]['shipping_country'],
                        'shipping_county_id'      => $order_query->rows[$i]['shipping_county_id'],
                        'shipping_county'         => $order_query->rows[$i]['shipping_county'],
				        'shipping_iso_code_2'     => $shipping_iso_code_2,
				        'shipping_iso_code_3'     => $shipping_iso_code_3,
				        'shipping_address_format' => $order_query->rows[$i]['shipping_address_format'],
				        'shipping_custom_field'   => json_decode($order_query->rows[$i]['shipping_custom_field'], true),
				        'shipping_method'         => $order_query->rows[$i]['shipping_method'],
				        'shipping_code'           => $order_query->rows[$i]['shipping_code'],
				        'comment'                 => $order_query->rows[$i]['comment'],
				        'total'                   => $order_query->rows[$i]['total'],
				        'order_status_id'         => $order_query->rows[$i]['order_status_id'],
				        'order_status'            => $order_query->rows[$i]['order_status'],
				        'affiliate_id'            => $order_query->rows[$i]['affiliate_id'],
				        'commission'              => $order_query->rows[$i]['commission'],
				        'language_id'             => $order_query->rows[$i]['language_id'],
				        'language_code'           => $language_code,
				        'currency_id'             => $order_query->rows[$i]['currency_id'],
				        'currency_code'           => $order_query->rows[$i]['currency_code'],
				        'currency_value'          => $order_query->rows[$i]['currency_value'],
				        'ip'                      => $order_query->rows[$i]['ip'],
				        'forwarded_ip'            => $order_query->rows[$i]['forwarded_ip'],
				        'user_agent'              => $order_query->rows[$i]['user_agent'],
				        'accept_language'         => $order_query->rows[$i]['accept_language'],
				        'date_added'              => $order_query->rows[$i]['date_added'],
				        'date_modified'           => $order_query->rows[$i]['date_modified'],
                'products'                => $this->getOrderProducts2($order_query->rows[$i]['order_id'])
			        );
		        } 
            return $orders;
	        }
        ]]>
      </add>
    </operation>
    <operation error="skip" info="change order logic">
      <search position="before">
        <![CDATA[public function getOrderOptions($order_id, $order_product_id) {]]>
      </search>
      <add>
        <![CDATA[
        public function getOrderProducts2($order_id) {
		      $query = $this->db->query("SELECT op.*, p.sku FROM " . DB_PREFIX . "order_product op left join ".DB_PREFIX."product p on p.product_id=op.product_id WHERE order_id = '" . (int)$order_id . "'");
		
		      return $query->rows;
	      }
        ]]>
      </add>
    </operation>
    <operation error="skip" info="change order logic">
      <search position="before">
        <![CDATA[public function deleteOrder($order_id) {]]>
      </search>
      <add>
        <![CDATA[
        public function editOrderStatus($order_id, $order_status_id, $comment) {
              $this->addOrderHistory($order_id, $order_status_id, $comment, true);
		      $this->db->query("update " . DB_PREFIX . "order set order_status_id='".$order_status_id."', set comment = '".$comment."' where order_id='".$order_id."'");
	      }
        ]]>
      </add>
    </operation>
  </file>
  <!--<file name="catalog/view/theme/default/template/checkout/checkout/checkout.twig" error="skip">

    <operation error="skip" info="change order logic">
      <search position="replace" offset="12">
        <![CDATA[<div class="quick-checkout-wrapper">]]>
      </search>
      <add>
        <![CDATA[
        <div class="row">
          <div class="col-md-{{ shipping_required ? '8' : '12' }}">
            {{ include(helper.template('checkout/checkout/_right_section')) }}
          </div>
          {% if shipping_required %}
          <div class="col-md-4">
            <div class="left-section-wrapper">
              {{ shipping_address_section }}
            </div>
          </div>
          {% endif %}
        </div>
        ]]>
      </add>
    </operation>
  </file>-->
  <file name="catalog/controller/checkout/checkout.php" error="skip">

    <operation error="skip" info="change checkout logic">
      <search position="replace">
        <![CDATA[if ($order['payment_code'] == 'cod') {]]>
      </search>
      <add>
        <![CDATA[if ($order['payment_code'] == 'cod' || $order['payment_code'] == 'skyfaith_payment_case1' || $order['payment_code'] == 'skyfaith_payment_case2') {]]>
      </add>
    </operation>
    <operation error="skip" info="change checkout logic">
      <search position="replace">
        <![CDATA[if ($order_data['payment_method'] == 'cod') {]]>
      </search>
      <add>
        <![CDATA[if ($order_data['payment_method'] == 'cod' || $order_data['payment_method'] == 'skyfaith_payment_case1' || $order_data['payment_method'] == 'skyfaith_payment_case2') {]]>
      </add>
    </operation>
  </file>
  <file name="catalog/controller/api/order.php" error="skip">
    <operation error="skip" info="change order logic">
      <search position="before">
        <![CDATA[public function history() {]]>
      </search>
      <add>
        <![CDATA[
        public function editOrderStatus() {
            $this->load->language('api/order');
            $json = array();

            if (!isset($this->session->data['api_id'])) {
                $json['error'] = $this->language->get('error_permission');
            } else {
                $this->load->model('checkout/order');
                if (isset($this->request->get['order_id'])) {
                    $order_id = $this->request->get['order_id'];
                } else {
                    $order_id = 0;
                }
                $order_info = $this->model_checkout_order->getOrder($order_id);
                if ($order_info) {
                    if (isset($this->request->get['order_status_id'])) {
                        $order_status_id = $this->request->get['order_status_id'];
                        $comment = '';
                        if (isset($this->request->get['order_comment'])) {
                            $comment = $this->request->get['order_comment'];
                        }
                        $this->model_checkout_order->editOrderStatus($order_id, $order_status_id, $comment);
                        $json['success'] = $this->language->get('text_success');
                    } else {
                         $json['error'] = $this->language->get('error_no_order_status');
                    }
                } else {
                      $json['error'] = $this->language->get('error_not_found');
                }
            }
            $this->response->addHeader('Content-Type: application/json');
            $this->response->setOutput(json_encode($json));
	    }
        ]]>
      </add>
    </operation>
  </file>
  <file name="catalog/language/en-gb/api/order.php" error="skip">
    <operation error="skip" info="change order translation in api">
      <search position="after">
        <![CDATA[$_['error_not_found']]]>
      </search>
      <add>
        <![CDATA[$_['error_no_order_status'] = 'Warning: No order status options are available!';]]>
      </add>
    </operation>
  </file>
  <file name="catalog/language/zh-cn/api/order.php" error="skip">
    <operation error="skip" info="change order translation in api">
      <search position="after">
        <![CDATA[$_['error_not_found']]]>
      </search>
      <add>
        <![CDATA[$_['error_no_order_status'] = '警告：没有提供订单状态！';]]>
      </add>
    </operation>
  </file>

</modification>